{"version":3,"sources":["webpack:///webpack/bootstrap 50fa842bff6ede1df43a","webpack:///./lib/mazerace.js","webpack:///./lib/grid.js","webpack:///./lib/solver.js","webpack:///./lib/algorithms/a-star.js","webpack:///./lib/algorithms/algorithm-base.js","webpack:///./lib/algorithms/bfs.js","webpack:///./lib/algorithms/dfs.js","webpack:///./lib/algorithms/bestfs.js","webpack:///./lib/stylesheets/mazerace.scss"],"names":["require","document","addEventListener","gridEl","getElementById","grid","solver","Grid","$el","cellSize","bindEvents","cb","el","Raphael","cols","rows","squares","currentAction","start","end","window","cellStyles","normal","fill","wall","checking","justChecked","checked","path","drawGrid","setDefaults","square","type","squareType","newX","attrs","x","newY","y","attr","toFront","row","col","tempRow","tempCol","animate","setAsSingleton","transform","centerX","centerY","parentX","parent","parentY","setAsStart","setAsEnd","e","srcElement","getAttribute","setAsWall","setAsNormal","setAction","handleSquare","hoverEvent","bind","callback","setSize","createRowTask","rowId","done","j","rect","push","sleep","setTimeout","tasks","i","async","series","allowDiagonal","neighbors","deltas","forEach","pos","delta","neighbor","setAsPath","child","rowSquares","originalSquare","Solver","algorithms","bfs","dfs","best","selectedAlgorithms","setAlgorithmOptions","querySelector","paused","searching","reset","alg1Ready","alg2Ready","length","innerHTML","firstDone","secondDone","grid1","clone","firstAlgorithm","getAlgorithm","classList","add","search","grid2","secondAlgorithm","hardReset","target","tagName","value","algorithm","nextSquare","setAsChecking","drawPath","newStore","processSquare","setAsJustChecked","firstSquare","secondSquare","step","setAsChecked","key","algorithmListEl","Object","keys","appendChild","createAlgorithmSelector","li","createElement","label","setAttribute","checkbox","handleAlgorithmSelection","addSelectedAlgorithm","uncheckUnSelected","removeSelectedAlgorithm","algorithmCheckboxes","querySelectorAll","includes","slice","newAlgorithms","AStar","AlgorithmBase","store","seen","diagonal","makeSeen","getNeighbors","alreadySeen","BFS","shift","DFS","pop","BestFS","bestSquare","distanceFromEnd","distance","x1","x2","y1","y2","Math","sqrt","pow"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 50fa842bff6ede1df43a","require('./stylesheets/mazerace.scss');\r\nimport Grid from './grid';\r\nimport Solver from './solver';\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n  const gridEl = document.getElementById('chooser-grid');\r\n  let grid = new Grid(gridEl);\r\n  let solver = new Solver(grid);\r\n});\r\n\n\n\n// WEBPACK FOOTER //\n// ./lib/mazerace.js","class Grid {\r\n  constructor($el, cellSize = 30, bindEvents = true, cb = () => {}) {\r\n    this.el = $el;\r\n    this.grid = Raphael($el);\r\n    this.cols = 30;\r\n    this.rows = 30;\r\n    this.squares = [];\r\n    this.currentAction = null;\r\n    this.start = null;\r\n    this.end = null;\r\n    window.grid = this;\r\n    this.cellSize = cellSize;\r\n    this.cellStyles = {\r\n      normal: {\r\n        fill: 'white',\r\n        'stroke-opacity': 0.2\r\n      },\r\n      wall: {\r\n        fill: '#95a5a6',\r\n        'stroke-opacity': 0.2,\r\n      },\r\n      start: {\r\n        fill: '#2ecc71',\r\n        'stroke-opacity': 0.2,\r\n      },\r\n      end: {\r\n        fill: '#e74c3c',\r\n        'stroke-opacity': 0.2,\r\n      },\r\n      checking: {\r\n        fill: '#2980b9',\r\n        'stroke-opacity': 0.2,\r\n      },\r\n      justChecked: {\r\n        fill: 'rgb(152, 251, 152)',\r\n        'stroke-opacity': 0.2,\r\n      },\r\n      checked: {\r\n        fill: 'rgb(175, 238, 238)',\r\n        'stroke-opacity': 0.2,\r\n      },\r\n      path: {\r\n        fill: '#ff0',\r\n        'stroke-opacity': 0.2\r\n      }\r\n    };\r\n\r\n    this.drawGrid(() => {\r\n      this.setDefaults();\r\n      cb();\r\n    });\r\n\r\n    if( bindEvents ) {\r\n      this.bindEvents();\r\n    }\r\n  }\r\n\r\n  setAsSingleton(square, type) {\r\n    if( square.squareType == 'normal' ) {\r\n      if( this[type] ) {\r\n        let newX = square.attrs.x;\r\n        let newY = square.attrs.y;\r\n        square.attr({x: this[type].attrs.x, y: this[type].attrs.y});\r\n        this[type].attr({x: newX, y: newY}).toFront();\r\n        this.squares[this[type].row][this[type].col] = square;\r\n        this.squares[square.row][square.col] = this[type];\r\n        let tempRow = square.row;\r\n        let tempCol = square.col;\r\n        square.row = this[type].row;\r\n        square.col = this[type].col;\r\n        this[type].row = tempRow;\r\n        this[type].col = tempCol;\r\n      } else {\r\n        square.squareType = type;\r\n        this[type] = square;\r\n        square.animate(this.cellStyles[type], 100);\r\n      }\r\n    }\r\n  }\r\n\r\n  setAsStart(square) {\r\n    this.setAsSingleton(square, 'start');\r\n  }\r\n\r\n  setAsEnd(square) {\r\n    this.setAsSingleton(square, 'end');\r\n  }\r\n\r\n  setAsWall(square) {\r\n    if( square.squareType == 'normal' ) {\r\n      square.squareType = 'wall';\r\n      square.attr({\r\n        transform: 's1.2'\r\n      }).animate({\r\n        fill: this.cellStyles.wall.fill,\r\n        transform: 's1.0'\r\n      }, 100);\r\n    }\r\n  }\r\n\r\n  setAsChecked(square) {\r\n    square.attr({\r\n      transform: 's1.2'\r\n    }).animate({\r\n      fill: this.cellStyles.checked.fill,\r\n      transform: 's1.0'\r\n    }, 100);\r\n  }\r\n\r\n  setAsPath(square) {\r\n    let centerX = square.attrs.x + this.cellSize/2;\r\n    let centerY = square.attrs.y + this.cellSize/2;\r\n    let parentX = square.parent.attrs.x + this.cellSize/2;\r\n    let parentY = square.parent.attrs.y + this.cellSize/2;\r\n    let path = this.grid.path(`M${centerX} ${centerY}L${parentX} ${parentY}`);\r\n    path.attr('stroke', this.cellStyles.path.fill);\r\n    path.attr('stroke-width', 4);\r\n  }\r\n\r\n  setAsChecking(square) {\r\n    square.attr({\r\n      transform: 's1.2'\r\n    }).animate({\r\n      fill: this.cellStyles.checking.fill,\r\n      transform: 's1.0'\r\n    }, 100);\r\n  }\r\n\r\n  setAsJustChecked(square) {\r\n    square.attr({\r\n      transform: 's1.2'\r\n    }).animate({\r\n      fill: this.cellStyles.justChecked.fill,\r\n      transform: 's1.0'\r\n    }, 100);\r\n  }\r\n\r\n  setAsNormal(square) {\r\n    if( square.squareType == 'wall' ) {\r\n      square.squareType = 'normal';\r\n      square.attr({\r\n        transform: 's1.2'\r\n      }).animate({\r\n        fill: this.cellStyles.normal.fill,\r\n        transform: 's1.0'\r\n      }, 100);\r\n    }\r\n  }\r\n\r\n  setDefaults() {\r\n    this.setAsStart(this.squares[10][10]);\r\n    this.setAsEnd(this.squares[20][20]);\r\n  }\r\n\r\n  handleSquare(e) {\r\n    const x = e.srcElement.getAttribute('x');\r\n    const y = e.srcElement.getAttribute('y');\r\n\r\n    if( x && y ) {\r\n      let col = x / this.cellSize;\r\n      let row = y / this.cellSize;\r\n\r\n      let square = this.squares[row][col];\r\n\r\n      if( square ) {\r\n        switch( this.currentAction ) {\r\n          case 'draggingStart':\r\n            this.setAsStart(square);\r\n            break;\r\n          case 'draggingEnd':\r\n            this.setAsEnd(square);\r\n            break;\r\n          case 'drawingWall':\r\n            this.setAsWall(square);\r\n            break;\r\n          case 'erasingWall':\r\n            this.setAsNormal(square);\r\n            break;\r\n          default:\r\n            this.setAction(square);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  setAction(square) {\r\n    switch( square.squareType ) {\r\n      case 'start':\r\n        this.currentAction = 'draggingStart';\r\n        break;\r\n      case 'end':\r\n        this.currentAction = 'draggingEnd';\r\n        break;\r\n      case 'wall':\r\n        this.currentAction = 'erasingWall';\r\n        this.setAsNormal(square);\r\n        break;\r\n      default:\r\n        this.currentAction = 'drawingWall';\r\n        this.setAsWall(square);\r\n    }\r\n  }\r\n\r\n  hoverEvent(e) {\r\n    if( this.currentAction ) {\r\n      this.handleSquare(e);\r\n    }\r\n  }\r\n\r\n  bindEvents() {\r\n    this.el.addEventListener('mouseover', this.hoverEvent.bind(this));\r\n    this.el.addEventListener('mousedown', this.handleSquare.bind(this));\r\n    this.el.addEventListener('mouseup', e => {\r\n      this.currentAction = null;\r\n    });\r\n  }\r\n\r\n  drawGrid(callback) {\r\n    let { squares, grid, cellSize, cols, rows, cellStyles } = this;\r\n    grid.setSize(cols * cellSize, rows * cellSize);\r\n\r\n    const createRowTask = function(rowId) {\r\n      return function(done) {\r\n        squares[rowId] = [];\r\n        for (let j = 0; j < cols; ++j) {\r\n          let x = j * cellSize;\r\n          let y = rowId * cellSize;\r\n\r\n          let square = grid.rect(x, y, cellSize, cellSize);\r\n          square.attr(cellStyles.normal);\r\n          square.squareType = 'normal';\r\n          square.row = rowId;\r\n          square.col = j;\r\n          squares[rowId].push(square);\r\n        }\r\n\r\n        done(null);\r\n      };\r\n    };\r\n\r\n    const sleep = function(done) {\r\n      setTimeout(function() {\r\n        done(null);\r\n      }, 0);\r\n    };\r\n\r\n    let tasks = [];\r\n    for (let i = 0; i < rows; ++i) {\r\n      tasks.push(createRowTask(i));\r\n      tasks.push(sleep);\r\n    }\r\n\r\n    async.series(tasks, function() {\r\n      if (callback) {\r\n        callback();\r\n      }\r\n    });\r\n  }\r\n\r\n  getNeighbors(square, allowDiagonal = false) {\r\n    let neighbors = [];\r\n    let deltas;\r\n\r\n    if( allowDiagonal) {\r\n      deltas = [\r\n        [1, 0],\r\n        [1, 1],\r\n        [0, 1],\r\n        [-1, 1],\r\n        [-1, 0],\r\n        [-1, -1],\r\n        [0, -1],\r\n        [-1, 1]\r\n      ];\r\n    } else {\r\n      deltas = [\r\n        [1, 0],\r\n        [0, 1],\r\n        [-1, 0],\r\n        [0, -1]\r\n      ];\r\n    }\r\n\r\n    deltas.forEach( delta => {\r\n      let pos = [];\r\n      pos.push( square.row + delta[0] );\r\n      pos.push( square.col + delta[1] );\r\n\r\n      if( this.squares[pos[0]]) {\r\n        let neighbor = this.squares[pos[0]][pos[1]];\r\n\r\n        if( neighbor && neighbor.squareType !== 'wall' ) {\r\n          neighbors.push(neighbor);\r\n        }\r\n      }\r\n    });\r\n\r\n    return neighbors;\r\n  }\r\n\r\n  reset() {\r\n    this.squares.forEach( row => {\r\n      row.forEach( square => {\r\n        if( square.squareType === 'normal' ) {\r\n          square.attr(this.cellStyles.normal);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  hardReset() {\r\n    this.squares.forEach( row => {\r\n      row.forEach( square => {\r\n        if( square.squareType !== 'end' && square.squareType !== 'start' ) {\r\n          square.attr(this.cellStyles.normal);\r\n          square.squareType = 'normal';\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  drawPath(square) {\r\n    while( square.parent ) {\r\n      this.setAsPath(square);\r\n      square.parent.child = square;\r\n      square = square.parent;\r\n    }\r\n  }\r\n\r\n  clone($el, cellSize = 15, cb = () => {}) {\r\n    let grid = new Grid($el, cellSize, false, () => {\r\n\r\n      grid.squares.forEach( (rowSquares, row) => {\r\n        rowSquares.forEach( (square, col) => {\r\n          let originalSquare = this.squares[row][col];\r\n\r\n          switch( originalSquare.squareType ) {\r\n            case 'start':\r\n            grid.setAsStart(square);\r\n            break;\r\n            case 'end':\r\n            grid.setAsEnd(square);\r\n            break;\r\n            case 'wall':\r\n            grid.setAsWall(square);\r\n            break;\r\n            case 'normal':\r\n            grid.setAsNormal(square);\r\n            break;\r\n          }\r\n        });\r\n      });\r\n      cb();\r\n    });\r\n\r\n    return grid;\r\n  }\r\n}\r\n\r\nexport default Grid;\r\n\n\n\n// WEBPACK FOOTER //\n// ./lib/grid.js","import AStar from './algorithms/a-star';\r\nimport BFS from './algorithms/bfs';\r\nimport DFS from './algorithms/dfs';\r\nimport BestFS from './algorithms/bestfs';\r\n\r\nclass Solver {\r\n  constructor(grid) {\r\n    this.grid = grid;\r\n    this.algorithms = {\r\n      bfs: 'Breadth First Search',\r\n      dfs: 'Depth First Search',\r\n      best: 'Best First Search',\r\n      // astar: 'A*'\r\n    }\r\n\r\n    this.allowDiagonal = false;\r\n\r\n    this.selectedAlgorithms = ['bfs', 'best'];\r\n\r\n    this.setAlgorithmOptions();\r\n    this.bindEvents();\r\n  }\r\n\r\n  bindEvents() {\r\n    document.querySelector('.play-button').addEventListener('click', e => {\r\n      this.paused = false;\r\n\r\n      if( !this.searching ) {\r\n        this.searching = true;\r\n        this.grid.reset();\r\n        let alg1Ready = false;\r\n        let alg2Ready = false;\r\n\r\n        if( this.selectedAlgorithms.length > 1 ) {\r\n          document.getElementById('firstAlgorithm').innerHTML = '';\r\n          document.getElementById('secondAlgorithm').innerHTML = '';\r\n\r\n          this.firstDone = false;\r\n          this.secondDone = false;\r\n          let grid1 = this.grid.clone(document.getElementById('firstAlgorithm'), 20, () => {\r\n            this.firstAlgorithm = this.getAlgorithm(this.selectedAlgorithms[0], grid1);\r\n            alg1Ready = true;\r\n            if( alg2Ready ) {\r\n              document.getElementById('chooser-grid').classList.add('closed');\r\n              document.querySelector('.controls').classList.add('closed');\r\n              document.querySelector('.controls-parent').classList.add('closed');\r\n              setTimeout(() => {\r\n                this.search();\r\n              }, 1500);\r\n            }\r\n          });\r\n          let grid2 = this.grid.clone(document.getElementById('secondAlgorithm'), 20, () => {\r\n            this.secondAlgorithm = this.getAlgorithm(this.selectedAlgorithms[1], grid2);\r\n            alg2Ready = true;\r\n            if( alg1Ready ) {\r\n              document.getElementById('chooser-grid').classList.add('closed');\r\n              document.querySelector('.controls').classList.add('closed');\r\n              document.querySelector('.controls-parent').classList.add('closed');\r\n              setTimeout(() => {\r\n                this.search();\r\n              }, 1500);\r\n            }\r\n          });\r\n\r\n        } else {\r\n          this.firstAlgorithm = this.getAlgorithm(this.selectedAlgorithms[0], this.grid);\r\n          this.search();\r\n        }\r\n      } else {\r\n        this.search();\r\n      }\r\n    });\r\n\r\n    document.querySelector('.restart-button').addEventListener('click', e => {\r\n      this.grid.reset();\r\n    });\r\n\r\n    document.querySelector('.erase-button').addEventListener('click', e => {\r\n      this.grid.hardReset();\r\n    });\r\n\r\n    document.querySelector('.pause-button').addEventListener('click', e => {\r\n      this.paused = true;\r\n    });\r\n\r\n    document.getElementById('allow-diagonal').addEventListener('click', e => {\r\n      if( e.target.tagName === 'INPUT' ) {\r\n        let {checked, value} = e.target;\r\n        if( e.target.checked ) {\r\n          this.allowDiagonal = true;\r\n        } else {\r\n          this.allowDiagonal = false;\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  step(algorithm) {\r\n    let square = algorithm.nextSquare();\r\n    if( square ) {\r\n      if( square.squareType !== 'start' && square.squareType !== 'end' ) {\r\n        algorithm.grid.setAsChecking(square);\r\n      }\r\n\r\n      if( square.squareType === 'end' ) {\r\n        algorithm.drawPath(square);\r\n      } else {\r\n        let newStore = algorithm.processSquare(square, this.allowDiagonal);\r\n\r\n        newStore.forEach( square => {\r\n          if( square.squareType != 'end' && square.squareType != 'start' ) {\r\n            algorithm.grid.setAsJustChecked(square);\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    return square || {};\r\n  }\r\n\r\n  search() {\r\n    if( !this.paused ) {\r\n      let { firstAlgorithm, secondAlgorithm } = this;\r\n\r\n      let firstSquare, secondSquare;\r\n\r\n      if( !this.firstDone ) {\r\n        firstSquare = this.step(firstAlgorithm);\r\n        if( firstSquare.squareType === 'end' ) {\r\n          this.firstDone = true;\r\n        }\r\n      }\r\n\r\n      if( !this.secondDone && secondAlgorithm ) {\r\n        secondSquare = this.step(secondAlgorithm);\r\n        if( secondSquare.squareType === 'end' ) {\r\n          this.secondDone = true;\r\n        }\r\n      }\r\n\r\n      setTimeout( () => {\r\n        if( !this.firstDone ) {\r\n          if( firstSquare.squareType != 'end' && firstSquare.squareType != 'start' ) {\r\n            firstAlgorithm.grid.setAsChecked( firstSquare );\r\n          }\r\n        }\r\n\r\n        if( !this.secondDone && secondAlgorithm ) {\r\n          if( secondSquare.squareType != 'end' && secondSquare.squareType != 'start' ) {\r\n            secondAlgorithm.grid.setAsChecked( secondSquare );\r\n          }\r\n        }\r\n\r\n        if( !this.firstDone || (!this.secondDone && secondAlgorithm) || (!secondAlgorithm) ) {\r\n          this.search();\r\n        } else {\r\n          this.searching = false;\r\n          this.secondDone = false;\r\n          this.firstDone = false;\r\n          this.firstAlgorithm = null;\r\n          this.secondAlgorithm = null;\r\n        }\r\n      }, 10);\r\n    }\r\n  }\r\n\r\n  getAlgorithm(key, grid) {\r\n    switch( key ) {\r\n      case 'bfs':\r\n        return new BFS(grid);\r\n      case 'dfs':\r\n        return new DFS(grid);\r\n      case 'best':\r\n        return new BestFS(grid);\r\n      case 'astart':\r\n        return new AStar(grid);\r\n    }\r\n  }\r\n\r\n  setAlgorithmOptions() {\r\n    const algorithmListEl = document.querySelector('.algorithm-selection ul');\r\n\r\n    Object.keys(this.algorithms).forEach( key => {\r\n      algorithmListEl.appendChild(this.createAlgorithmSelector(key));\r\n    });\r\n  }\r\n\r\n  createAlgorithmSelector(key) {\r\n    let li = document.createElement('li');\r\n    let label = document.createElement('label');\r\n    label.setAttribute('class', 'm-sm');\r\n    let checkbox = document.createElement('input');\r\n    checkbox.setAttribute('type', 'checkbox');\r\n    if( key === 'bfs' || key === 'best' ) {\r\n      checkbox.setAttribute('checked', 'true');\r\n    }\r\n    checkbox.setAttribute('value', key);\r\n    label.appendChild(checkbox);\r\n    label.innerHTML = label.innerHTML + ` ${this.algorithms[key]}`;\r\n    li.appendChild(label);\r\n    li.addEventListener('click', this.handleAlgorithmSelection.bind(this));\r\n    return li;\r\n  }\r\n\r\n  handleAlgorithmSelection(e) {\r\n    if(e.target.tagName === 'INPUT') {\r\n      let {checked, value} = e.target;\r\n      if( e.target.checked ) {\r\n        this.addSelectedAlgorithm(value);\r\n        this.uncheckUnSelected();\r\n      } else {\r\n        this.removeSelectedAlgorithm(value);\r\n      }\r\n    }\r\n  }\r\n\r\n  uncheckUnSelected() {\r\n    const algorithmCheckboxes = document.querySelectorAll('.algorithm-selection ul li input');\r\n\r\n    algorithmCheckboxes.forEach( checkbox => {\r\n      if( !this.selectedAlgorithms.includes(checkbox.value) ) {\r\n        checkbox.checked = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  addSelectedAlgorithm(key) {\r\n    if( this.selectedAlgorithms.length >= 2 ) {\r\n      this.selectedAlgorithms = this.selectedAlgorithms.slice(0,1);\r\n    }\r\n\r\n    this.selectedAlgorithms.push(key);\r\n  }\r\n\r\n  removeSelectedAlgorithm(key) {\r\n    let { selectedAlgorithms } = this;\r\n    let newAlgorithms = [];\r\n\r\n    selectedAlgorithms.forEach(algorithm => {\r\n      if( algorithm !== key ) {\r\n        newAlgorithms.push(algorithm);\r\n      }\r\n    });\r\n\r\n    this.selectedAlgorithms = newAlgorithms;\r\n  }\r\n}\r\n\r\nexport default Solver;\r\n\n\n\n// WEBPACK FOOTER //\n// ./lib/solver.js","import AlgorithmBase from './algorithm-base';\r\n\r\nclass AStar extends AlgorithmBase {\r\n  constructor(grid) {\r\n    super(grid);\r\n  }\r\n\r\n\r\n}\r\n\r\nexport default AStar;\r\n\n\n\n// WEBPACK FOOTER //\n// ./lib/algorithms/a-star.js","class AlgorithmBase {\r\n  constructor(grid) {\r\n    this.grid = grid;\r\n\r\n    this.store = [this.grid.start];\r\n    this.seen = {};\r\n  }\r\n\r\n  alreadySeen(square) {\r\n    return this.seen[square.row] && this.seen[square.row][square.col];\r\n  }\r\n\r\n  makeSeen(square) {\r\n    if( !this.seen[square.row] ) {\r\n      this.seen[square.row] = {};\r\n    }\r\n\r\n    this.seen[square.row][square.col] = true;\r\n  }\r\n\r\n  processSquare(square, diagonal = false) {\r\n    this.makeSeen(square);\r\n    let neighbors = this.grid.getNeighbors(square, diagonal);\r\n    let newStore = [];\r\n\r\n    neighbors.forEach( neighbor => {\r\n      if( !this.alreadySeen(neighbor) ) {\r\n        neighbor.parent = square;\r\n        this.store.push(neighbor);\r\n        newStore.push(neighbor);\r\n        this.makeSeen(neighbor);\r\n      }\r\n    });\r\n\r\n    return newStore;\r\n  }\r\n\r\n  drawPath(square) {\r\n    this.grid.drawPath(square);\r\n  }\r\n}\r\n\r\nexport default AlgorithmBase;\r\n\n\n\n// WEBPACK FOOTER //\n// ./lib/algorithms/algorithm-base.js","import AlgorithmBase from './algorithm-base';\r\n\r\nclass BFS extends AlgorithmBase {\r\n  nextSquare() {\r\n    let square = this.store.shift();\r\n    return square;\r\n  }\r\n}\r\n\r\nexport default BFS;\r\n\n\n\n// WEBPACK FOOTER //\n// ./lib/algorithms/bfs.js","import AlgorithmBase from './algorithm-base';\r\n\r\nclass DFS extends AlgorithmBase {\r\n  nextSquare() {\r\n    let square = this.store.pop();\r\n    return square;\r\n  }\r\n}\r\n\r\nexport default DFS;\r\n\n\n\n// WEBPACK FOOTER //\n// ./lib/algorithms/dfs.js","import AlgorithmBase from './algorithm-base';\r\n\r\nclass BestFS extends AlgorithmBase {\r\n  nextSquare() {\r\n    let bestSquare = null;\r\n    let distanceFromEnd = null;\r\n\r\n    this.store.forEach( square => {\r\n      let distance = this.distanceFromEnd(square);\r\n\r\n      if( distanceFromEnd === null || ( distance < distanceFromEnd && bestSquare.squareType != 'end' ) ) {\r\n        distanceFromEnd = distance;\r\n        bestSquare = square;\r\n      }\r\n    });\r\n\r\n    let newStore = [];\r\n\r\n    this.store.forEach( square => {\r\n      if( square !== bestSquare ) {\r\n        newStore.push( square );\r\n      }\r\n    });\r\n\r\n    this.store = newStore;\r\n\r\n    return bestSquare;\r\n  }\r\n\r\n  distanceFromEnd(square) {\r\n    if( square.squareType === 'end' ) {\r\n      return 0;\r\n    }\r\n\r\n    let {end} = this.grid;\r\n\r\n    let x1 = end.row;\r\n    let x2 = square.row;\r\n    let y1 = end.col;\r\n    let y2 = square.col;\r\n\r\n    return Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\r\n  }\r\n}\r\n\r\nexport default BestFS;\r\n\n\n\n// WEBPACK FOOTER //\n// ./lib/algorithms/bestfs.js","// removed by extract-text-webpack-plugin\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/stylesheets/mazerace.scss\n// module id = 8\n// module chunks = 0"],"sourceRoot":""}